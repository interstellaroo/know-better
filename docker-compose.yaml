services:
  db:
    image: postgres:latest
    container_name: knowbetter-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: knowbetter-backend
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports:
      - "3000:3000"
    command: npm run start:dev
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./backend/package.json
    depends_on:
      - db
  
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: knowbetter-ai-service
    restart: always
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    develop:
      watch:
        - action: sync
          path: ./ai-service
          target: /usr/src/app
          ignore:
            - __pycache__/
        - action: rebuild
          path: ./ai-service/requirements.txt
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: knowbetter-frontend
    restart: always
    ports:
      - "5173:5173"
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json
    depends_on:
      - backend

volumes:
  pgdata:
